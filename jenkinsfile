node {
    try {
        notifyBuild('STARTED')

        stage('Prepare code') {
            git"https://github.com/jeanse63/humanbooster"
            echo 'do checkout stuff'
        }

        stage('Testing') {
            echo 'Testing'
            sh 'mvn test'
            junit(testResults : '**/target/**/TEST*.xml',allowEmptyResults: true)
            echo 'Testing - publish coverage results'
        }

	stage('build'){
	    sh 'mvn package -DskipTests'
	}

	stage('release (test server)'){
	    sh 'docker build ./ -t gbformhb/todolistgb'
	    sh 'docker rm -f todolistdock | true'
	    sh 'docker run -d --name todolistdock -p 8080:8080 gbformhb/todolistgb'
	}

	stage('functional tests') {
	    sh 'mvn -Dtest=TestTaskBySelenium test'
	}

    stage('deploy (Prod server)'){
        //sh 'docker rm -f todolist_test | true'
        //sh 'docker run -d --name todolist_test -p 80:8080 gbformhb/todolistgb'

        sh 'docker login gbformhb -p Onvavoir-63'
        sh 'docker push gbformhb/todolistgb'
        sh 'docker -H=165.227.133.134 pull gbformhb/todolistgb'
        sh 'docker -H=165.227.133.134 rm -f todolist_gb | true'
        sh 'docker -H=165.227.133.134 run -d --name todolist_gb -p 8082:8080 gbformhb/todolistgb'
    }

  } catch (e) {
    // If there was an exception thrown, the build failed
    currentBuild.result = "FAILED"
    throw e
  } finally {
    // Success or failure, always send notifications
    notifyBuild(currentBuild.result)
  }
}

def notifyBuild(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESSFUL'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESSFUL') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)
}
